#Область ПрограммныйИнтерфейс

// @unit-test
Процедура ПроверкаОшибокВЖурналеРегистрации(Фреймворк) Экспорт
	
	ТабЗначенийПоискПоследнегоОбновленияКонфигурацииБазы = Новый ТаблицаЗначений;
	ВыгрузитьЖурналРегистрации(ТабЗначенийПоискПоследнегоОбновленияКонфигурацииБазы, Новый Структура("Событие", "_$InfoBase$_.DBConfigUpdate"));
	Если ТабЗначенийПоискПоследнегоОбновленияКонфигурацииБазы.Количество() = 0 Тогда
		ДатаПоследнегоОбновленияКонфигурацииБазы = ТекущаяДатаСеанса() - 60 * 60 ;
	Иначе
		ТабЗначенийПоискПоследнегоОбновленияКонфигурацииБазы.Сортировать("Дата Убыв");
		ДатаПоследнегоОбновленияКонфигурацииБазы = ТабЗначенийПоискПоследнегоОбновленияКонфигурацииБазы[0].Дата;
	КонецЕсли;
	
	ТабЗначенийОшибкиЖРЗаИсследуемыйПериод = Новый ТаблицаЗначений;
	ВыгрузитьЖурналРегистрации(ТабЗначенийОшибкиЖРЗаИсследуемыйПериод, Новый Структура("ДатаНачала, Уровень", ДатаПоследнегоОбновленияКонфигурацииБазы, УровеньЖурналаРегистрации.Ошибка));
	
	ЗарегистрированоОшибокПослеОбновления = ТабЗначенийОшибкиЖРЗаИсследуемыйПериод.Количество();
	Если ЗарегистрированоОшибокПослеОбновления > 0 Тогда
	
		ПутьКфайлуЛога = Тест_МодульныеТесты.СоздатьФайлОшибок(Фреймворк, "EventLogErrors.xml", "");
		
		Если ЗначениеЗаполнено(ПутьКфайлуЛога) Тогда
			ВыгрузитьЖурналРегистрации(ПутьКфайлуЛога, Новый Структура("ДатаНачала, Уровень", ДатаПоследнегоОбновленияКонфигурацииБазы, УровеньЖурналаРегистрации.Ошибка));
		КонецЕсли; 
			
	КонецЕсли;
	
	Фреймворк.ПроверитьРавенство(ЗарегистрированоОшибокПослеОбновления, 0, "В Журнале регистрации информационной базы были ошибки после обновления");
	
КонецПроцедуры

#КонецОбласти