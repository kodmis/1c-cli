//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2023 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

// Читает табличный документ в массив структур
//
//	Параметры:
//		ТабличныйДокумент - ТабличныйДокумент - Исходный табличный документ
//		НомерКолонки - Число - Номер строки таблицы, с которой следует начать считывание
//		НомерСтроки - Число - Номер колонки таблицы, с которой следует начать считывание
//	Возвращаемое значение:
//		Массив из Структура - Данные табличного документа	
Функция ДанныеТабличногоДокумента(ТабличныйДокумент, Знач НомерКолонки = 1, Знач НомерСтроки = 1) Экспорт
	
	МассивДанных = Новый Массив;
	СведенияКолонок = Новый Массив;
	
	ЗаменяемыеСтроки = ЮТТестовыеДанныеСлужебный.ПодстрокиДляЗаменыВИменахСвойств();
	
	ЗначениеКолонки = ТабличныйДокумент.Область(НомерСтроки, НомерКолонки).Текст;
	Пока ЗначениеЗаполнено(ЗначениеКолонки) Цикл
		
		Для Каждого Замена Из ЗаменяемыеСтроки Цикл
			ПодстрокаПоиска = Замена.Ключ;
			ПодстрокаЗамены = Замена.Значение;
			ИмяКолонки = СтрЗаменить(ЗначениеКолонки, ПодстрокаПоиска, ПодстрокаЗамены);
		КонецЦикла;
		
		Сведения = Новый Структура("НомерКолонки, ИмяКолонки", НомерКолонки, ИмяКолонки);
		СведенияКолонок.Добавить(Сведения);
		
		НомерКолонки = НомерКолонки + 1;
		ЗначениеКолонки = ТабличныйДокумент.Область(НомерСтроки, НомерКолонки).Текст;
		
	КонецЦикла;
	
	НомерСтроки = НомерСтроки + 1;
	
	Пока ЕстьЗначенияВСтроке(ТабличныйДокумент, НомерСтроки, СведенияКолонок) Цикл
		
		Структура = Новый Структура;
		
		Для Каждого Сведения Из СведенияКолонок Цикл
			Значение = СокрЛП(ТабличныйДокумент.Область(НомерСтроки, Сведения.НомерКолонки).Текст);
			Структура.Вставить(Сведения.ИмяКолонки, Значение);
		КонецЦикла;
		
		МассивДанных.Добавить(Структура);
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
	Возврат МассивДанных;
	
КонецФункции
	
Функция ПривестиЗначениеКДате(ОписаниеТипа, Знач Значение) Экспорт
	
	Результат = ОписаниеТипа.ПривестиЗначение(Значение);
	Если ЗначениеЗаполнено(Результат) Тогда
		Возврат Результат;
	КонецЕсли;
	
	МассивРазделителей = Новый Массив;
	МассивРазделителей.Добавить(".");
	МассивРазделителей.Добавить("/");
	МассивРазделителей.Добавить("-");
	
	СтрокаДаты = Неопределено;
	
	КоличествоБлоковДаты = 3;
	ДлинаГода = 4;
	
	Для Каждого Разделитель Из МассивРазделителей Цикл
		
		Если ЗначениеЗаполнено(СтрокаДаты) Тогда
			Прервать;
		КонецЕсли;
		
		МассивЧастейДат = СтрРазделить(Значение, Разделитель);
		
		Если МассивЧастейДат.Количество() = КоличествоБлоковДаты Тогда
			
			Если СтрДлина(МассивЧастейДат[2]) = ДлинаГода Тогда
				СтрокаДаты = МассивЧастейДат[2] + МассивЧастейДат[1] + МассивЧастейДат[0];
			ИначеЕсли СтрДлина(МассивЧастейДат[0]) = ДлинаГода Тогда
				СтрокаДаты = МассивЧастейДат[0] + МассивЧастейДат[1] + МассивЧастейДат[2];
			Иначе
				СтрокаДаты = "20" + МассивЧастейДат[2] + МассивЧастейДат[1] + МассивЧастейДат[0];
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Результат = ОписаниеТипа.ПривестиЗначение(СтрокаДаты);
	
	Возврат Результат;
	
КонецФункции

Функция ПривестиЗначениеКЧислу(ОписаниеТипа, Знач Значение) Экспорт
	
	Результат = ОписаниеТипа.ПривестиЗначение(Значение);
	Если ЗначениеЗаполнено(Результат) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Значение = СтрЗаменить(Значение, " ", "");
	Результат = ОписаниеТипа.ПривестиЗначение(Значение);
	
	Возврат Результат;
	
КонецФункции
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЕстьЗначенияВСтроке(ТабличныйДокумент, НомерСтроки, СведенияКолонок)
	
	ЕстьЗаполненныеЗначения = Ложь;
	
	Для Каждого Сведения Из СведенияКолонок Цикл
		Если ЕстьЗаполненныеЗначения Тогда
			Прервать;
		КонецЕсли;
		НомерКолонки = Сведения.НомерКолонки;
		ЕстьЗаполненныеЗначения = ЗначениеЗаполнено(ТабличныйДокумент.Область(НомерСтроки, НомерКолонки).Текст);
	КонецЦикла;
	
	Возврат ЕстьЗаполненныеЗначения;
	
КонецФункции

#КонецОбласти
