#Область ПрограммныйИнтерфейс

// Возвращает менеджеры логических хранилищ.
//
// Возвращаемое значение:
//  ФиксированноеСоответствие - менеджеры логических хранилищ:
//    * Ключ - Строка - идентификатор логического хранилища;
//    * Значение - ОбщийМодуль - менеджер логического хранилища.
//
Функция ВсеМенеджерыЛогическихХранилищ() Экспорт
	
	Возврат ПередачаДанныхПовтИсп.МенеджерыЛогическихХранилищ();
	
КонецФункции

// Возвращает менеджеры физических хранилищ.
//
// Возвращаемое значение:
//  ФиксированноеСоответствие - менеджеры физических хранилищ:
//    * Ключ - Строка - идентификатор физического хранилища;
//    * Значение - ОбщийМодуль - менеджер физического хранилища.
//
Функция ВсеМенеджерыФизическихХранилищ() Экспорт
	
	Возврат ПередачаДанныхПовтИсп.МенеджерыФизическихХранилищ();
	
КонецФункции

// Получает данные из логического хранилища.
//
// Параметры:
//   ПараметрыДоступа - Структура - поля:
//     * URL - Строка - URL сервиса, обязательно должно присутствовать и быть заполненным;
//     * UserName - Строка - имя пользователя;
//     * Password - Строка - пароль пользователя.
//     * Кэш - Соответствие - необязательный, пустое соответствие, если указан, может использоваться для кеширования.
//   ИдентификаторХранилища - Строка - идентификатор логического хранилища.
//   Идентификатор - Строка - идентификатор данных в логическом хранилище.
//   Диапазон - Структура - 
//     * Начало - Число - первый байт.
//     * Конец - Число - последний байт.
//   ИмяФайла - Строка, Неопределено - Имя файла для записи данных.
//
// Возвращаемое значение:
//   Структура - описание файла:
//	   * Имя - Строка - имя файла;
//	   * ПолноеИмя - Строка - полное имя файла (включающее путь к файлу).
//
Функция ПолучитьИзЛогическогоХранилища(ПараметрыДоступа, ИдентификаторХранилища, Идентификатор, Диапазон = Неопределено, ИмяФайла = Неопределено) Экспорт
	
	Возврат ПередачаДанныхСлужебный.Получить(ПараметрыДоступа, Ложь, ИдентификаторХранилища, Идентификатор, Диапазон, ИмяФайла);
	
КонецФункции

// Получает информацию о файле из логического хранилища.
//
// Параметры:
//   ПараметрыДоступа - Структура - поля:
//     * URL - Строка - URL сервиса, обязательно должно присутствовать и быть заполненным;
//     * UserName - Строка - имя пользователя;
//     * Password - Строка - пароль пользователя.
//   ИдентификаторХранилища - Строка - идентификатор логического хранилища.
//   Идентификатор - Строка - идентификатор данных в логическом хранилище.
//
// Возвращаемое значение:
//   Число - размер файла в байтах.
//
Функция ПолучитьРазмерФайлаИзЛогическогоХранилища(ПараметрыДоступа, ИдентификаторХранилища, Идентификатор) Экспорт
	
	Возврат ПередачаДанныхСлужебный.ПолучитьРазмерФайла(ПараметрыДоступа, Ложь, ИдентификаторХранилища, Идентификатор);
	
КонецФункции

// Получает данные из физического хранилища.
//
// Параметры:
//   ПараметрыДоступа - Структура - поля:
//     * URL - Строка - URL сервиса, обязательно должно присутствовать и быть заполненным;
//     * UserName - Строка - имя пользователя;
//     * Password - Строка - пароль пользователя.
//   ИдентификаторХранилища - Строка - идентификатор физического хранилища.
//   Идентификатор - Строка - идентификатор данных в физическом хранилище.
//   ИмяФайла - Строка, Неопределено - Имя файла для записи данных.
//
// Возвращаемое значение:
//   Структура - описание файла:
//	   * Имя - Строка - имя файла;
//	   * ПолноеИмя - Строка - полное имя файла (включающее путь к файлу).
//
Функция ПолучитьИзФизическогоХранилища(ПараметрыДоступа, ИдентификаторХранилища, Идентификатор, ИмяФайла = Неопределено) Экспорт
	
	Возврат ПередачаДанныхСлужебный.Получить(ПараметрыДоступа, Истина, ИдентификаторХранилища, Идентификатор,, ИмяФайла);
	
КонецФункции

// Отправляет данные в логическое хранилище.
//
// Параметры:
//   ПараметрыДоступа - Структура - поля:
//     * URL - Строка - URL сервиса, обязательно должно присутствовать и быть заполненным;
//     * UserName - Строка - имя пользователя;
//     * Password - Строка - пароль пользователя.
//   ИдентификаторХранилища - Строка - идентификатор логического хранилища.
//   Данные - Строка - адрес данных во временном хранилище;
//          - Строка - полное имя файла (включающее путь к файлу);
//          - Файл - файловый объект;
//          - ДвоичныеДанные - значение в виде двоичных данных.
//   ИмяФайла - Строка - имя передаваемого файла.
//   ДополнительныеПараметры - Структура - структура со значениями сериализуемыми в json.
//
Функция ОтправитьВЛогическоеХранилище(ПараметрыДоступа, ИдентификаторХранилища, Данные, Знач ИмяФайла, ДополнительныеПараметры = Неопределено) Экспорт
	
	Возврат ПередачаДанныхСлужебный.Отправить(ПараметрыДоступа, Ложь, ИдентификаторХранилища, Данные, ИмяФайла, ДополнительныеПараметры);
	
КонецФункции

// Начинает отправку файла в логическое хранилище
//
// Параметры:
//   ПараметрыДоступа - Структура - поля:
//     * URL - Строка - URL сервиса, обязательно должно присутствовать и быть заполненным;
//     * UserName - Строка - имя пользователя;
//     * Password - Строка - пароль пользователя.
//   ИдентификаторХранилища - Строка - идентификатор логического хранилища.
//   Данные - Строка - адрес данных во временном хранилище;
//          - Строка - полное имя файла (включающее путь к файлу);
//          - Файл - файловый объект;
//          - ДвоичныеДанные - значение в виде двоичных данных.
//   ИмяФайла - Строка - имя передаваемого файла.
//   ДополнительныеПараметры - Структура - структура со значениями сериализуемыми в json.
//
// Возвращаемое значение:
//   Структура - поля:
//     Location - Строка -
//     SetCookie - Строка - 
//     АдресS3 - Строка - 
//     ИдентификаторФайлаS3 - Строка - 
//     ПередачаЧастями - Булево - 
//
Функция НачатьОтправкуВЛогическоеХранилище(ПараметрыДоступа, ИдентификаторХранилища, Данные, Знач ИмяФайла, ДополнительныеПараметры = Неопределено) Экспорт
	
	Возврат ПередачаДанныхСлужебный.НачатьОтправку(ПараметрыДоступа, Ложь, ИдентификаторХранилища, Данные, ИмяФайла, ДополнительныеПараметры);
	
КонецФункции

// Отправляет очередную часть
//
// Параметры:
//   ПараметрыДоступа - Структура - поля:
//     * URL - Строка - URL сервиса, обязательно должно присутствовать и быть заполненным;
//     * UserName - Строка - имя пользователя;
//     * Password - Строка - пароль пользователя.
//   ПараметрыОтправки - Структура - поля:
//     Location - Строка -
//     SetCookie - Строка - 
//     АдресS3 - Строка - 
//     ИдентификаторФайлаS3 - Строка - 
//     ПередачаЧастями - Булево - 
// 
// Возвращаемое значение:
//   Число, Неопределено - Количество байт в случае успешной отправки, или Неопределено, если не получилось отправить
//
Функция ОтправитьЧастьФайлаВЛогическоеХранилище(ПараметрыДоступа, ПараметрыОтправки, Данные, ПоследняяЧасть = Истина, Смещение = 0) Экспорт
	
	Возврат ПередачаДанныхСлужебный.ОтправитьЧастьФайла(ПараметрыДоступа, ПараметрыОтправки, Данные, ПоследняяЧасть, Смещение);
	
КонецФункции

// Отправляет данные в физическое хранилище.
//
// Параметры:
//   ПараметрыДоступа - Структура - поля:
//     * URL - Строка - URL сервиса, обязательно должно присутствовать и быть заполненным;
//     * UserName - Строка - имя пользователя;
//     * Password - Строка - пароль пользователя.
//   ИдентификаторХранилища - Строка - идентификатор физического хранилища.
//   Данные - Строка - адрес данных во временном хранилище;
//          - Строка - полное имя файла (включающее путь к файлу);
//          - Файл - файловый объект;
//          - ДвоичныеДанные - значение в виде двоичных данных.
//   ИмяФайла - Строка - имя передаваемого файла.
//
Функция ОтправитьВФизическоеХранилище(ПараметрыДоступа, ИдентификаторХранилища, Данные, Знач ИмяФайла) Экспорт
	
	Возврат ПередачаДанныхСлужебный.Отправить(ПараметрыДоступа, Истина, ИдентификаторХранилища, Данные, ИмяФайла);
	
КонецФункции

#КонецОбласти