#Область ПрограммныйИнтерфейс

// Возвращает актульное состояние расширения
// @skip-warning ПустойМетод - особенность реализации.
// 
// Параметры:
//  ПубличныйИдентификатор - Строка - публичный идентификатор расширения из Менеджера сервиса
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.СостоянияРасширений
Функция СостояниеРасширения(ПубличныйИдентификатор) Экспорт
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Параметры:
//	УстанавливаемыеРасширения - Массив Из Структура - со свойствами:
//		* Идентификатор - УникальныйИдентификатор - идентификатор расширения в сервисе.
//		* Представление - Строка - представление расширения. 
//		* Инсталляция - УникальныйИдентификатор - новый идентификатор инсталляции.
//		
// Возвращаемое значение:
// 	Булево - Истина, если успешно, Ложь - в противном случае.
//
Функция ВосстановитьРасширенияВНовойОбласти(Знач УстанавливаемыеРасширения, 
	Знач ИдентификаторПользователяСервиса = Неопределено) Экспорт
	
	Возврат Ложь;
	
КонецФункции

// @skip-warning ПустойМетод - особенность реализации.
// 
// Параметры:
//  КодОбластиДанных - Число - 
//  
// Возвращаемое значение:
//	Структура - со свойствами:
//	 * КлючОбластиДанных - Строка - 
//	 * РасширенияДляВосстановления - см. ВосстановитьРасширенияВНовойОбласти.УстанавливаемыеРасширения
//
Функция ПолучитьРасширенияДляНовойОбласти(Знач КодОбластиДанных) Экспорт
КонецФункции

// Возвращаемое значение: 
//  Массив из Тип - ссылочные типы, добавляемые расширениями.
Функция СсылочныеТипыДобавляемыеРасширениями() Экспорт
	
	СсылочныеТипы = Новый Массив;
	ТипыОбъектовМетаданныхСсылочногоТипа = ТипыОбъектовМетаданныхСсылочногоТипа();
	
	ЭтоРазделенныйСеанс = РаботаВМоделиСервиса.ИспользованиеРазделителяСеанса();
	
	УстановитьПривилегированныйРежим(Истина);
	РасширенияСеанса = РасширенияКонфигурации.Получить(,
		ИсточникРасширенийКонфигурации.СеансАктивные);
	
	ОбластьДействияРазделение = ОбластьДействияРасширенияКонфигурации.РазделениеДанных;	
	Для Каждого Расширение Из РасширенияСеанса Цикл
		
		Если ЭтоРазделенныйСеанс И
			Расширение.ОбластьДействия <> ОбластьДействияРазделение Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ Расширение.ИзменяетСтруктуруДанных() Тогда
			Продолжить;
		КонецЕсли;
		
		ОМДРасширения = Новый ОбъектМетаданныхКонфигурация(Расширение.ПолучитьДанные());
		
		Для Каждого ТипОМД Из ТипыОбъектовМетаданныхСсылочногоТипа Цикл
			ДополнитьТипы(СсылочныеТипы, ТипОМД, ОМДРасширения);
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат СсылочныеТипы;
	
КонецФункции

Процедура ЗаписатьДанныеВосстанавливаемыхРасширенийОбласти(РасширенияДляВосстановления) Экспорт 
	
	ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(
		"ДанныеРасширений", 
		РасширенияДляВосстановления, 
		"РасширенияДляВосстановления");
	
КонецПроцедуры

Процедура ПрочитатьДанныеВосстанавливаемыхРасширенийОбласти(ПараметрыЗагрузки) Экспорт 
	
	Если НЕ ПараметрыЗагрузки.Свойство("ДанныеРасширений") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ПараметрыЗагрузки.ДанныеРасширений) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыЗагрузки.ДанныеРасширений.Свойство("РасширенияДляВосстановления") Тогда
		Возврат;
	КонецЕсли;	
	
	ДанныеХранилища = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(
		"ДанныеРасширений",
		"РасширенияДляВосстановления");
		
	Если ДанныеХранилища <> Неопределено Тогда
		ПараметрыЗагрузки.ДанныеРасширений.Вставить("РасширенияДляВосстановления", ДанныеХранилища);	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДополнитьТипы(СсылочныеТипы, ТипОМД, ОМДРасширения)
	
	ПринадлежностьОбъекта = Метаданные.СвойстваОбъектов.ПринадлежностьОбъекта.Собственный; 
	
	Для Каждого ОМД Из ОМДРасширения[ТипОМД] Цикл
		
		Если ОМД.ПринадлежностьОбъекта <> ПринадлежностьОбъекта Тогда
			Продолжить;
		КонецЕсли;
		
		СсылкаДляОпределенияТипа = ПредопределенноеЗначение(ОМД.ПолноеИмя() 
			+ ".ПустаяСсылка");
		СсылочныеТипы.Добавить(ТипЗнч(СсылкаДляОпределенияТипа));
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТипыОбъектовМетаданныхСсылочногоТипа()
	
	ТипыОбъектовМетаданныхСсылочногоТипа = Новый Массив;
	ТипыОбъектовМетаданныхСсылочногоТипа.Добавить("Справочники");
	ТипыОбъектовМетаданныхСсылочногоТипа.Добавить("Документы");
	ТипыОбъектовМетаданныхСсылочногоТипа.Добавить("БизнесПроцессы");
	ТипыОбъектовМетаданныхСсылочногоТипа.Добавить("Задачи");
	ТипыОбъектовМетаданныхСсылочногоТипа.Добавить("ПланыСчетов");
	ТипыОбъектовМетаданныхСсылочногоТипа.Добавить("ПланыОбмена");
	ТипыОбъектовМетаданныхСсылочногоТипа.Добавить("ПланыВидовХарактеристик");
	ТипыОбъектовМетаданныхСсылочногоТипа.Добавить("ПланыВидовРасчета");
	
	Возврат ТипыОбъектовМетаданныхСсылочногоТипа;
	
КонецФункции

#КонецОбласти