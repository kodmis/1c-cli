///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Подсистема "ИнтернетПоддержкаПользователей.РаботаСКлассификаторами".
// ОбщийМодуль.РаботаСКлассификаторамиВызовСервера.
//
// Серверные процедуры и функции загрузки классификаторов:
//  - настройка режима обновления классификаторов.
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// Обновляет значение константы ВариантОбновленияКлассификаторов.
//
// Параметры:
//  Значение - Число - новое значение настройки.
//
Процедура УстановитьВариантОбновленияКлассификаторов(Значение) Экспорт
	
	Константы.ВариантОбновленияКлассификаторов.Установить(Значение);
	
КонецПроцедуры

// Обновляет значение константы ФайлКлассификаторов.
//
// Параметры:
//  Значение - Число - новое значение настройки.
//
Процедура УстановитьФайлКлассификаторов(Значение) Экспорт
	
	Константы.ФайлКлассификаторов.Установить(Значение);
	
КонецПроцедуры

// Определяет расписание регламентного задания обновления классификаторов.
//
// Возвращаемое значение:
//  РасписаниеРегламентногоЗадания - расписание обновления классификаторов.
//
Функция НастройкиОбновленияКлассификаторов() Экспорт
	
	// Расписание и вариант обновления классификаторов не являются секретной информацией
	// и может быть получена любым пользователем ИБ.
	Если РаботаСКлассификаторами.ИнтерактивнаяЗагрузкаКлассификаторовДоступна() Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Расписание",        Неопределено);
	Результат.Вставить("ВариантОбновления", Константы.ВариантОбновленияКлассификаторов.Получить());
	
	ЗаданияОбновления = РаботаСКлассификаторами.ЗаданияОбновлениеКлассификаторов();
	Если ЗаданияОбновления.Количество() <> 0 Тогда
		Результат.Расписание = ЗаданияОбновления[0].Расписание;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Задает расписание регламентного задания.
//
// Параметры:
//  Расписание - РасписаниеРегламентногоЗадания - расписание обновления классификаторов.
//
Процедура ЗаписатьРасписаниеОбновления(Расписание) Экспорт
	
	Если РаботаСКлассификаторами.ИнтерактивнаяЗагрузкаКлассификаторовДоступна() Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	
	ЗаданияОбновления = РаботаСКлассификаторами.ЗаданияОбновлениеКлассификаторов();
	Если ЗаданияОбновления.Количество() <> 0 Тогда
		РегламентныеЗаданияСервер.УстановитьРасписаниеРегламентногоЗадания(
			ЗаданияОбновления[0],
			Расписание);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
