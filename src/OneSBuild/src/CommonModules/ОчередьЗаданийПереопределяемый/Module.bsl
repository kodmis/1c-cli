///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2018, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////
// @strict-types

#Область ПрограммныйИнтерфейс

// Формирует список шаблонов заданий очереди.
// @skip-warning ПустойМетод - переопределяемый метод.
//
// Параметры:
//  ШаблоныЗаданий - Массив Из Строка - В параметр следует добавить имена предопределенных
//   неразделенных регламентных заданий, которые должны использоваться в качестве
//   шаблонов для заданий очереди.
//
Процедура ПриПолученииСпискаШаблонов(ШаблоныЗаданий) Экспорт
КонецПроцедуры

// Заполняет соответствие имен методов их псевдонимам для вызова из очереди заданий.
// @skip-warning ПустойМетод - переопределяемый метод.
//
// Параметры:
//  СоответствиеИменПсевдонимам - Соответствие из КлючИЗначение:
//    * Ключ - Строка - псевдоним метода, например "ОчиститьОбластьДанных".
//    * Значение - Строка - Имя метода для вызова, например "РаботаВМоделиСервиса.ОчиститьОбластьДанных".
//        В качестве значения можно указать Неопределено, в этом случае считается что имя 
//        совпадает с псевдонимом.
//
Процедура ПриОпределенииПсевдонимовОбработчиков(СоответствиеИменПсевдонимам) Экспорт
КонецПроцедуры

// Заполняет соответствие методов обработчиков ошибок псевдонимам методов, при возникновении
// ошибок в которых они вызываются.
// @skip-warning ПустойМетод - переопределяемый метод.
//
// Параметры:
//  ОбработчикиОшибок - Соответствие из КлючИЗначение:
//    * Ключ - Строка - Псевдоним метода, например ОчиститьОбластьДанных.
//    * Значение - Строка - Имя метода - обработчика ошибок, для вызова при возникновении ошибки. 
//        Обработчик ошибок вызывается в случае завершения выполнения исходного задания
//        с ошибкой. Обработчик ошибок вызывается в той же области данных, что и исходное задание.
//        Метод обработчика ошибок считается разрешенным к вызову механизмами очереди.
//        Параметры обработчика ошибок:
//          ПараметрыЗадания - Структура - параметры задания очереди.
//          Параметры
//          НомерПопытки
//          КоличествоПовторовПриАварийномЗавершении
//          ДатаНачалаПоследнегоЗапуска.
//
Процедура ПриОпределенииОбработчиковОшибок(ОбработчикиОшибок) Экспорт
КонецПроцедуры

// Формирует таблицу регламентных заданий с признаком использования в модели сервиса.
// @skip-warning ПустойМетод - переопределяемый метод.
// 
// Параметры:
//  ТаблицаИспользования - ТаблицаЗначений - описание:
//	* РегламентноеЗадание - Строка - имя регламентного задания.
//  * Использование - Булево - признак использования.
//
Процедура ПриОпределенииИспользованияРегламентныхЗаданий(ТаблицаИспользования) Экспорт
КонецПроцедуры

#КонецОбласти
