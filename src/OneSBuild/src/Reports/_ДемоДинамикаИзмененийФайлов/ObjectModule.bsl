///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВариантыОтчетов

// Задать настройки формы отчета.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения
//         - Неопределено
//   КлючВарианта - Строка
//                - Неопределено
//   Настройки - см. ОтчетыКлиентСервер.НастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.ФормироватьСразу = Истина;
	Настройки.ВыводитьСуммуВыделенныхЯчеек = Не ОбщегоНазначения.РежимОтладки();
	Настройки.События.ПриОпределенииПараметровВыбора = Истина;
КонецПроцедуры

// См. ОтчетыПереопределяемый.ПриОпределенииПараметровВыбора.
Процедура ПриОпределенииПараметровВыбора(Форма, СвойстваНастройки) Экспорт
	Если СвойстваНастройки.ОписаниеТипов.СодержитТип(Тип("СправочникСсылка._ДемоОрганизации")) Тогда
		СвойстваНастройки.ОграничиватьВыборУказаннымиЗначениями = Истина;
		СвойстваНастройки.ЗначенияДляВыбора.Очистить();
		СвойстваНастройки.ЗапросЗначенийВыбора.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ Ссылка ИЗ Справочник._ДемоОрганизации ГДЕ НЕ ПометкаУдаления";
	КонецЕсли;
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ТабличныйДокумент, ДанныеРасшифровки, СтандартнаяОбработка)
	НастройкиКД = КомпоновщикНастроек.ПолучитьНастройки();
	Задержка = НайтиПараметр(НастройкиКД, Неопределено, "МинимальнаяСкоростьФормирования").Значение;
	ДатаЗавершенияВМиллисекундах = ТекущаяУниверсальнаяДатаВМиллисекундах() + 1000*Задержка;
	
	СтандартнаяОбработка = Ложь;
	СформироватьОтчет(ТабличныйДокумент, ДанныеРасшифровки, НастройкиКД);
	
	Ячейка = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы + 2, 1, ТабличныйДокумент.ВысотаТаблицы + 2, 2);
	Ячейка.Объединить();
	ОтчетыСервер.ВывестиГиперссылку(Ячейка, "e1cib/list/Справочник.Файлы", НСтр("ru = 'Список файлов'"));
	
	Пока ТекущаяУниверсальнаяДатаВМиллисекундах() < ДатаЗавершенияВМиллисекундах Цикл
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьОтчет(ТабличныйДокумент, ДанныеРасшифровки, НастройкиКД)
	КомпоновщикМакетаКД = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКД = КомпоновщикМакетаКД.Выполнить(СхемаКомпоновкиДанных, НастройкиКД, ДанныеРасшифровки);
	
	ПроцессорКД = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКД.Инициализировать(МакетКД, , ДанныеРасшифровки, Истина);
	
	ПроцессорВыводаРезультатаКД = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВыводаРезультатаКД.УстановитьДокумент(ТабличныйДокумент);
	ПроцессорВыводаРезультатаКД.Вывести(ПроцессорКД);
	
	ОтчетПустой = ОтчетыСервер.ОтчетПустой(ЭтотОбъект, ПроцессорКД);
	КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ОтчетПустой", ОтчетПустой);
КонецПроцедуры

Функция НайтиПараметр(НастройкиКД, ПользовательскиеНастройкиКД, ИмяПараметра) Экспорт
	Возврат НайтиПараметры(НастройкиКД, ПользовательскиеНастройкиКД, ИмяПараметра)[ИмяПараметра];
КонецФункции

// Параметры:
//  НастройкиКД - НастройкиКомпоновкиДанных
//  ПользовательскиеНастройкиКД - ПользовательскиеНастройкиКомпоновкиДанных
//  ИменаПараметров - Строка
// Возвращаемое значение:
//  Структура
//
Функция НайтиПараметры(НастройкиКД, ПользовательскиеНастройкиКД, ИменаПараметров)
	Результат = Новый Структура;
	ИскомыеПараметры = Новый Соответствие;
	МассивИмен = СтрРазделить(ИменаПараметров, ",", Ложь);
	Количество = 0;
	Для Каждого ИмяПараметра Из МассивИмен Цикл
		ИскомыеПараметры.Вставить(СокрЛП(ИмяПараметра), Истина);
		Количество = Количество + 1;
	КонецЦикла;
	
	Если ПользовательскиеНастройкиКД <> Неопределено Тогда
		Для Каждого ЭлементКД Из ПользовательскиеНастройкиКД.Элементы Цикл
			Если ТипЗнч(ЭлементКД) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
				ИмяПараметра = Строка(ЭлементКД.Параметр);
				Если ИскомыеПараметры[ИмяПараметра] = Истина Тогда
					Результат.Вставить(ИмяПараметра, ЭлементКД);
					ИскомыеПараметры.Удалить(ИмяПараметра);
					Количество = Количество - 1;
					Если Количество = 0 Тогда
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Количество > 0 Тогда
		Для Каждого КлючИЗначение Из ИскомыеПараметры Цикл
			Если НастройкиКД <> Неопределено Тогда
				ЭлементКД = НастройкиКД.ПараметрыДанных.Элементы.Найти(КлючИЗначение.Ключ);
			Иначе
				ЭлементКД = Неопределено;
			КонецЕсли;
			Результат.Вставить(КлючИЗначение.Ключ, ЭлементКД);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли