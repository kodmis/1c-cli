#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИдентификаторОбращения = Параметры.ИдентификаторОбращения;
	Если Параметры.Свойство("КодПользователя") 
		И ЗначениеЗаполнено(Параметры.КодПользователя) Тогда
		КодПользователя = Параметры.КодПользователя;
	Иначе
		КодПользователя = ИнформационныйЦентрСервер.КодПользователяДляДоступа();
	КонецЕсли;
	ТекущаяСтраница = 1;
	Рассмотрено = Ложь;
	
	ЗаполнитьСодержаниеОбращения();
	ЗаполнитьПерепискуПоОбращению();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОтправкаСообщенияВСлужбуПоддержки" Или ИмяСобытия = "ПросмотреноВзаимодействиеПоОбращению" Тогда 
		ПодключитьОбработчикОжидания("ЗаполнитьПерепискуПоОбращениюКлиент", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокВзаимодействийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	ИнформационныйЦентрКлиент.ОткрытьВзаимодействиеВСлужбуПоддержки(ИдентификаторОбращения, 
		ТекущиеДанные.Идентификатор, ТекущиеДанные.Тип, ТекущиеДанные.Входящее, ТекущиеДанные.Просмотрено, КодПользователя);
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаЛевоНажатие(Элемент)
	
	ТекущаяСтраница = ТекущаяСтраница - 1;
	ЗаполнитьПерепискуПоОбращению();
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаПравоНажатие(Элемент)
	
	ТекущаяСтраница = ТекущаяСтраница + 1;
	ЗаполнитьПерепискуПоОбращению();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьКомментарий(Команда)
	
	ИнформационныйЦентрКлиент.ОткрытьФормуОтправкиСообщенияВСлужбуПоддержки(
		Ложь, ИдентификаторОбращения, КодПользователя);
	
КонецПроцедуры

&НаКлиенте
Процедура Рассмотрено(Команда)
	
	РассмотреноНаСервере();
	
	Если Рассмотрено Тогда 
		Оповестить("ПросмотреноВзаимодействиеПоОбращению");
	КонецЕсли;
	
	Рассмотрено = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСодержаниеОбращения()
	
	Попытка
		
		ДанныеПоОбращению = ПолучитьДанныеПоОбращению();
		ЗаполнитьСодержание(ДанныеПоОбращению);
		
	Исключение
		
		ТекстОшибки = ИнформационныйЦентрСлужебный.ПодробныйТекстОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(ИнформационныйЦентрСервер.ПолучитьИмяСобытияДляЖурналаРегистрации(), 
		                         УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);
		ТекстВывода = ИнформационныйЦентрСервер.ТекстВыводаИнформацииОбОшибкеВСлужбеПоддержки();
		
		ВызватьИсключение ТекстВывода;
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеПоОбращению()
	
	WSПрокси = ИнформационныйЦентрСервер.ПолучитьПроксиСлужбыПоддержки();
	
	Результат = WSПрокси.getIncident(КодПользователя, Строка(ИдентификаторОбращения));
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСодержание(ДанныеПоОбращению)
	
	ЭтотОбъект.Заголовок = ДанныеПоОбращению.Name + " (" + ДанныеПоОбращению.Number + ")";
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПерепискуПоОбращениюКлиент()
	
	ЗаполнитьПерепискуПоОбращению();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПерепискуПоОбращению()
	
	Попытка
		
		ДанныеПоПереписке = ПолучитьДанныеПоПереписке();
		ЗаполнитьПереписку(ДанныеПоПереписке);
		
	Исключение
		
		ТекстОшибки = ИнформационныйЦентрСлужебный.ПодробныйТекстОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(ИнформационныйЦентрСервер.ПолучитьИмяСобытияДляЖурналаРегистрации(), 
		                         УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);
		ТекстВывода = ИнформационныйЦентрСервер.ТекстВыводаИнформацииОбОшибкеВСлужбеПоддержки();
		
		ВызватьИсключение ТекстВывода;
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеПоПереписке()
	
	WSПрокси = ИнформационныйЦентрСервер.ПолучитьПроксиСлужбыПоддержки();
	
	Результат = WSПрокси.getInteractions(КодПользователя, Строка(ИдентификаторОбращения), 
		ТекущаяСтраница);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПереписку(ДанныеПоПереписке)
	
	СписокВзаимодействий.Очистить();
	
	Для Каждого ЭлементВзаимодействия Из ДанныеПоПереписке.Interactions Цикл
		 
		НовоеВзаимодействие = СписокВзаимодействий.Добавить();
		НовоеВзаимодействие.Идентификатор = Новый УникальныйИдентификатор(ЭлементВзаимодействия.Id);
		НовоеВзаимодействие.Тема = ЭлементВзаимодействия.Name;
		НовоеВзаимодействие.Описание = ?(ПустаяСтрока(ЭлементВзаимодействия.Description), 
			НСтр("ru = '<Без текста>'"), ЭлементВзаимодействия.Description);
		НовоеВзаимодействие.Дата = ЭлементВзаимодействия.Date;
		НовоеВзаимодействие.НомерКартинки = ИнформационныйЦентрСервер.НомерКартинкиПоВзаимодействию(
			ЭлементВзаимодействия.Type, ЭлементВзаимодействия.Incoming);
		НовоеВзаимодействие.КартинкаВложения = 
			?(ЭлементВзаимодействия.IsFiles, БиблиотекаКартинок.Скрепка, Неопределено);
		НовоеВзаимодействие.ПояснениеККартинке = 
			?(ЭлементВзаимодействия.Incoming, НСтр("ru = 'Вх.'"), НСтр("ru = 'Исх.'"));
		НовоеВзаимодействие.Входящее = ЭлементВзаимодействия.Incoming;
		НовоеВзаимодействие.Тип = ЭлементВзаимодействия.Type;
		НовоеВзаимодействие.Просмотрено = ЭлементВзаимодействия.Viewed;
		
	КонецЦикла;
	
	ЗаполнитьПодвал(ДанныеПоПереписке);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодвал(ДанныеПоПереписке)
	
	ЕстьСтраницыДо = (ТекущаяСтраница > 1);
	ЕстьСтраницыПосле = ДанныеПоПереписке.IsStill;
	
	Элементы.КнопкаЛево.Гиперссылка = ЕстьСтраницыДо;
	Элементы.КнопкаЛево.Картинка = 
		?(ЕстьСтраницыДо, БиблиотекаКартинок.ПереходВлевоАктивный, БиблиотекаКартинок.ПереходВлевоНеАктивный);
	Элементы.КнопкаПраво.Картинка = 
		?(ЕстьСтраницыПосле, БиблиотекаКартинок.ПереходВправоАктивный, БиблиотекаКартинок.ПереходВправоНеАктивный);
	Элементы.КнопкаПраво.Гиперссылка = ЕстьСтраницыПосле;
	Элементы.ТекущаяСтраница.Заголовок = ТекущаяСтраница;
	
КонецПроцедуры

&НаСервере
Процедура РассмотреноНаСервере()
	
	WSПрокси = ИнформационныйЦентрСервер.ПолучитьПроксиСлужбыПоддержки();
	
	Фабрика = WSПрокси.ФабрикаXDTO;
	
	ТипСписокВзаимодействий = 
		Фабрика.Тип("http://www.1c.ru/1cFresh/InformationCenter/SupportServiceData/1.0.0.1", "ListInteraction");
	СписокВзаимодействийXDTO = Фабрика.Создать(ТипСписокВзаимодействий);
	
	МассивСтрок = Элементы.СписокВзаимодействий.ВыделенныеСтроки;
	
	Для Каждого ЭлементМассива Из МассивСтрок Цикл
		 
		НайденнаяСтрока = СписокВзаимодействий.НайтиПоИдентификатору(ЭлементМассива);
		
		Если НайденнаяСтрока = Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		
		Если НайденнаяСтрока.Просмотрено Тогда 
			Продолжить;
		КонецЕсли;
		
		Рассмотрено = Истина;
		
		ВзаимодействиеXDTO = СформироватьВзаимодействиеXDTO(НайденнаяСтрока, Фабрика);
		Обработки.ИнформационныйЦентр.ДобавитьЗначениеВСписокXDTO(
			СписокВзаимодействийXDTO, "Interactions", ВзаимодействиеXDTO);
		
	КонецЦикла;
	
	WSПрокси.setInteractionsViewed(КодПользователя, СписокВзаимодействийXDTO);
	
КонецПроцедуры

&НаСервере
Функция СформироватьВзаимодействиеXDTO(НайденнаяСтрока, Фабрика)
	
	ТипВзаимодействия = 
		Фабрика.Тип("http://www.1c.ru/1cFresh/InformationCenter/SupportServiceData/1.0.0.1", "Interaction");
	Взаимодействие = Фабрика.Создать(ТипВзаимодействия);
	
	Взаимодействие.Id = Строка(НайденнаяСтрока.Идентификатор);
	Взаимодействие.Type = НайденнаяСтрока.Тип;
	Взаимодействие.Incoming = НайденнаяСтрока.Входящее;
	
	Возврат Взаимодействие;
	
КонецФункции

#КонецОбласти