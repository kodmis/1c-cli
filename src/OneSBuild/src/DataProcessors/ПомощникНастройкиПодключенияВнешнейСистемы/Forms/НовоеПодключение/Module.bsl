///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2020, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("ПараметрыПодключения") Тогда
		ВызватьИсключение НСтр("ru = 'Некорректные параметры формы.'");
	КонецЕсли;
	
	ИдентификаторСистемы   = Параметры.ПараметрыПодключения.ИдентификаторСистемы;
	РасписаниеЗагрузки     = Параметры.ПараметрыПодключения.РасписаниеЗагрузки;
	НаименованиеСистемы    = Параметры.ПараметрыПодключения.НаименованиеСистемы;
	СсылкаНаВнешнююСистему = Параметры.ПараметрыПодключения.СсылкаНаВнешнююСистему;
	ОписаниеСистемы        = Параметры.ПараметрыПодключения.ОписаниеСистемы;
	
	УстановитьОтображениеЭлементовФормы();
	УстановитьВидимостьДоступность(Элементы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияРасписаниеЗаданияНажатие(Элемент)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ДекорацияРасписаниеЗавершение",
		ЭтотОбъект);
	
	// АПК:574-выкл код не используется в мобильном клиенте
	ДиалогРасписания = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеЗагрузки);
	ДиалогРасписания.Показать(ОписаниеОповещения);
	// АПК:574-вкл
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОшибкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	ОбменДаннымиСВнешнимиСистемамиКлиент.ДекорацияОшибкаОбработкаНавигационнойСсылки(
		ЭтотОбъект,
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Далее(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиЗагрузки Тогда
		
		Если Не ЗначениеЗаполнено(НаименованиеНастройки) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Не заполнено поле ""Наименование"".'"),
				,
				"Наименование");
			Возврат;
		КонецЕсли;
		
		ПолучитьИдентификаторОбменДанными();
	Иначе
		Закрыть(РезультатСохранения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиЗагрузки;
	УстановитьВидимостьДоступность(Элементы);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	ЭтотОбъект.Закрыть(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область УправлениеФормой

&НаСервере
Процедура УстановитьОтображениеЭлементовФормы()
	
	АвтоматическиПоРасписанию = Истина;
	ОписаниеНастройки         = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Настройка подключения к системе %1 (%2)'"),
		НаименованиеСистемы,
		Строка(ТекущаяДатаСеанса()));
	НаименованиеНастройки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Синхронизация с системой %1'"),
		НаименованиеСистемы);
	Элементы.ДекорацияРасписаниеЗадания.Заголовок = Лев(Строка(РасписаниеЗагрузки), 37) + "...";
	ЭтотОбъект.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Новое подключение к системе %1'"),
		НаименованиеСистемы);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтображениеОшибки(Элементы, ОписаниеОшибки)
	
	Элементы.ДекорацияОшибка.Заголовок = ИнтернетПоддержкаПользователейКлиентСервер.ФорматированнаяСтрокаИзHTML(
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1
				|
				|
				|Подробнее см. <a href = ""OpenLog"">журнал регистрации</a>.'"),
			ОписаниеОшибки));
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОшибкиСозданияНастройки;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьДоступность(Элементы)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиЗагрузки Тогда
		Элементы.Далее.Видимость  = Истина;
		Элементы.Отмена.Видимость = Истина;
		Элементы.Назад.Видимость  = Ложь;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация Тогда
		Элементы.Далее.Видимость  = Ложь;
		Элементы.Отмена.Видимость = Ложь;
		Элементы.Назад.Видимость  = Ложь;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОшибкиСозданияНастройки Тогда
		Элементы.Далее.Видимость  = Ложь;
		Элементы.Отмена.Видимость = Истина;
		Элементы.Назад.Видимость  = Истина;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкаЗавершена Тогда
		Элементы.Далее.Видимость  = Истина;
		Элементы.Далее.Заголовок  = НСтр("ru = 'Готово'");
		Элементы.Отмена.Видимость = Ложь;
		Элементы.Назад.Видимость  = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРасписаниеЗавершение(Расписание, ДополнительныеПараметры) Экспорт
	
	Если Расписание <> Неопределено Тогда
		ЭтотОбъект.Модифицированность                 = Истина;
		РасписаниеЗагрузки                            = Расписание;
		РасписаниеСтрокой                             = Строка(РасписаниеЗагрузки);
		Элементы.ДекорацияРасписаниеЗадания.Заголовок = ?(СтрДлина(РасписаниеСтрокой) > 40,
			Лев(РасписаниеСтрокой, 37) + "...",
			РасписаниеСтрокой);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеИдентификатораОбменаДанными

&НаКлиенте
Процедура ПолучитьИдентификаторОбменДанными()
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	РезультатВыполнения = ПолучитьИдентификаторОбменДаннымиНаСервере();
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ПолучитьИдентификаторОбменДаннымиЗавершение",
		ЭтотОбъект);
	
	Если РезультатВыполнения.Статус = "Выполнено" Тогда
		ПолучитьИдентификаторОбменДаннымиЗавершение(РезультатВыполнения, Неопределено);
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация;
	УстановитьВидимостьДоступность(Элементы);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИдентификаторОбменДаннымиНаСервере()
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("ИдентификаторСистемы",      ИдентификаторСистемы);
	ПараметрыПроцедуры.Вставить("РасписаниеЗагрузки",        РасписаниеЗагрузки);
	ПараметрыПроцедуры.Вставить("НаименованиеСистемы",       НаименованиеСистемы);
	ПараметрыПроцедуры.Вставить("СсылкаНаВнешнююСистему",    СсылкаНаВнешнююСистему);
	ПараметрыПроцедуры.Вставить("НаименованиеНастройки",     НаименованиеНастройки);
	ПараметрыПроцедуры.Вставить("ОписаниеНастройки",         ОписаниеНастройки);
	ПараметрыПроцедуры.Вставить("АвтоматическиПоРасписанию", АвтоматическиПоРасписанию);
	ПараметрыПроцедуры.Вставить("ОписаниеСистемы",           ОписаниеСистемы);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(ЭтотОбъект.УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Создание новой настройки синхронизации данных с внешней системой.'");
	
	РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.ПомощникНастройкиПодключенияВнешнейСистемы.СоздатьНастройкиПодключения",
		ПараметрыПроцедуры,
		ПараметрыВыполнения);
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ПолучитьИдентификаторОбменДаннымиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		РезультатОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
			УстановитьОтображениеОшибки(
				Элементы,
				РезультатОперации.СообщениеОбОшибке);
		Иначе
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкаЗавершена;
			РезультатСохранения = РезультатОперации.РезультатСохранения;
		КонецЕсли;
		УстановитьВидимостьДоступность(Элементы);
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		УстановитьОтображениеОшибки(
			Элементы,
			Результат.КраткоеПредставлениеОшибки);
		УстановитьВидимостьДоступность(Элементы);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
