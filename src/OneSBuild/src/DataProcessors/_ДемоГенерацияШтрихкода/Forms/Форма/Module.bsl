///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Штрихкод     = "(01)04600822901507(11)161109(30)2434"; // "46120441";
	УголПоворота = 0;
	ТипШтрихкодаЗнач = 1;
	УровеньКоррекцииQR = 1;
	КоличествоСтрокGS1Databar = 2;
	ВертикальноеВыравнивание  = 1;
	ПроходовГенерации = 3;
	ЛоготипРазмерПроцентОтШК = 10;
	ОтображатьТекст   = Истина;
	
	ВнешняяКомпонента = ГенерацияШтрихкода.ПодключитьКомпонентуГенерацииИзображенияШтрихкода();
	ВерсияКомпоненты  = ВнешняяКомпонента.Версия;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьШтрихкодBase64();
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодПриИзменении(Элемент)
	
	ОбновитьШтрихкодBase64();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДействиеСформировать(Команда)
	
	ОчиститьСообщения();
	СформироватьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	Результат.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьШтрихкод(ШиринаШтрихкода, ВысотаШтрихкода, ЗначШтрихкод, ЗначТипШтрихкода)
	
	ПараметрыШтрихкода = ГенерацияШтрихкода.ПараметрыГенерацииШтрихкода();
	ПараметрыШтрихкода.Ширина = ШиринаШтрихкода;
	ПараметрыШтрихкода.Высота = ВысотаШтрихкода;
	ПараметрыШтрихкода.ТипКода = ЗначТипШтрихкода;
	ПараметрыШтрихкода.УголПоворота = Число(УголПоворота);
	ПараметрыШтрихкода.Штрихкод = ЗначШтрихкод;
	ПараметрыШтрихкода.ПрозрачныйФон = ПрозрачныйФон;
	ПараметрыШтрихкода.УровеньКоррекцииQR = УровеньКоррекцииQR;
	ПараметрыШтрихкода.ОтображатьТекст = ОтображатьТекст;
	ПараметрыШтрихкода.Масштабировать = Масштабировать;
	ПараметрыШтрихкода.СохранятьПропорции = СохранятьПропорции;
	ПараметрыШтрихкода.ВертикальноеВыравнивание  = ВертикальноеВыравнивание; 
	ПараметрыШтрихкода.GS1DatabarКоличествоСтрок = КоличествоСтрокGS1Databar;
	ПараметрыШтрихкода.ТипВходныхДанных = ?(ВходныеДанныеВBase64, 1, 0);
	ПараметрыШтрихкода.УбратьЛишнийФон = УбратьЛишнийФон;
	ПараметрыШтрихкода.ЛоготипКартинка = КартинкаBase64;
	ПараметрыШтрихкода.ЛоготипРазмерПроцентОтШК = ЛоготипРазмерПроцентОтШК;
	
	РезультатШтрихкод = ГенерацияШтрихкода.ИзображениеШтрихкода(ПараметрыШтрихкода);
	Если НЕ РезультатШтрихкод.Результат Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Ошибка генерации'"));
	КонецЕсли;
	
	Возврат РезультатШтрихкод.Картинка;
	
КонецФункции

&НаСервере
Процедура СформироватьНаСервере()
	
	Результат.Очистить();
	
	ВремОбъект = РеквизитФормыВЗначение("Объект");
	Макет = ВремОбъект.ПолучитьМакет("Макет");
	
	Область = Макет.ПолучитьОбласть("Строка|Колонка");
	Рисунок = Область.Рисунки.ШтрихКод;
	
	Эталон = Обработки._ДемоГенерацияШтрихкода.ПолучитьМакет("МакетДляОпределенияКоэффициентовЕдиницИзмерения");
	
	КоличествоМиллиметровВПикселеВысота = Эталон.Рисунки.Квадрат100Пикселей.Высота / 100;
	КоличествоМиллиметровВПикселеШирина = Эталон.Рисунки.Квадрат100Пикселей.Ширина / 100;
	ШиринаШтрихкода = Окр(Рисунок.Ширина / КоличествоМиллиметровВПикселеШирина);
	ВысотаШтрихкода = Окр(Рисунок.Высота / КоличествоМиллиметровВПикселеВысота);
	
	Если ВходныеДанныеВBase64 Тогда 
		ВходныеДанные = ШтрихкодBASE64
	Иначе
		ВходныеДанные = Штрихкод
	КонецЕсли;
	
	Картинка = ПолучитьШтрихкод(ШиринаШтрихкода, ВысотаШтрихкода, ВходныеДанные, ТипШтрихкодаЗнач);
	
	Рисунок.Картинка = Картинка;
	Результат.Вывести(Область);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьШтрихкодBase64()
	
	ДвоичныеДанныеСтроки = ПолучитьДвоичныеДанныеИзСтроки(Штрихкод);
	ШтрихкодBase64 = Base64Строка(ДвоичныеДанныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКартинкуВыборФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		Карт = Новый Картинка(ВыбранныеФайлы[0]);
		КартинкаBase64 = Base64Строка(Карт.ПолучитьДвоичныеДанные());
		ЛоготипКартинка = ПоместитьВоВременноеХранилище(Карт);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКартинку(Команда)
	
	Обработчик = Новый ОписаниеОповещения("ЗагрузитьКартинкуВыборФайла", ЭтотОбъект);
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = НСтр("ru = 'Выбор файла картинки'");
	Фильтр =  НСтр("ru = 'PNG (*.png)|*.png'");
	Диалог.Фильтр = Фильтр;
	Диалог.МножественныйВыбор = Ложь;
	ФайловаяСистемаКлиент.ПоказатьДиалогВыбора(Обработчик, Диалог);
	
КонецПроцедуры

#КонецОбласти