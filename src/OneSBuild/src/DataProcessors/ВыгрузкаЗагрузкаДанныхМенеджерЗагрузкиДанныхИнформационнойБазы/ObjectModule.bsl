#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ТекущийКонтейнер;
Перем ТекущиеЗагружаемыеТипы;
Перем ТекущиеИсключаемыеТипы;
Перем ТекущиеОбработчики;
Перем ТекущийПотокЗаменыСсылок;
Перем ОбработанныеДублиПредопределенных;
Перем ИндексПервогоЗагружаемого;

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура Инициализировать(Контейнер, ЗагружаемыеТипы, ИсключаемыеТипы, Обработчики, ПолноеИмяПервогоЗагружаемогоОбъектаМетаданных = Неопределено) Экспорт
	
	ТекущийКонтейнер = Контейнер;
	ТекущиеЗагружаемыеТипы = ЗагружаемыеТипы;
	ТекущиеЗагружаемыеТипы = СортироватьЗагружаемыеТипы(ТекущиеЗагружаемыеТипы);
	ТекущиеИсключаемыеТипы = ИсключаемыеТипы;
	ТекущиеОбработчики = Обработчики;
	ТекущийПотокЗаменыСсылок = Обработки.ВыгрузкаЗагрузкаДанныхПотокЗаменыСсылок.Создать();
	ТекущийПотокЗаменыСсылок.Инициализировать(ТекущийКонтейнер, ТекущиеОбработчики);	
	ОбработанныеДублиПредопределенных = Новый Соответствие();
	
	Если ПолноеИмяПервогоЗагружаемогоОбъектаМетаданных = Неопределено Тогда
		ИндексПервогоЗагружаемого = 0;
	Иначе
		ПервыйЗагружаемыйОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(
			ПолноеИмяПервогоЗагружаемогоОбъектаМетаданных);
		ИндексПервогоЗагружаемого = ТекущиеЗагружаемыеТипы.Найти(ПервыйЗагружаемыйОбъектМетаданных);
	КонецЕсли;
			
КонецПроцедуры

Процедура ЗагрузитьДанные() Экспорт
	
	ВыполнитьЗаменуСсылок();
	ВыполнитьЗагрузкуДанных();
	
КонецПроцедуры

// Возвращаемое значение: 
//  ОбработкаОбъект.ВыгрузкаЗагрузкаДанныхПотокЗаменыСсылок - текущий поток замены ссылок.
Функция ТекущийПотокЗаменыСсылок() Экспорт
	
	Возврат ТекущийПотокЗаменыСсылок;
	
КонецФункции

//@skip-warning ПустойМетод - особенность реализации.
//
Процедура Закрыть() Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Типы сортируются по убыванию приоритета, сериализаторы выбирают их из массива с конца.
//
// Параметры:
//	ЗагружаемыеТипы - Массив из ОбъектМетаданных - массив метаданных.
//
// Возвращаемое значение:
//	Массив - отсортированный массив метаданных по приоритету.
//
Функция СортироватьЗагружаемыеТипы(Знач ЗагружаемыеТипы)
	
	Сортировка = Новый ТаблицаЗначений();
	Сортировка.Колонки.Добавить("ОбъектМетаданных");
	Сортировка.Колонки.Добавить("Приоритет", Новый ОписаниеТипов("Число"));
	Сортировка.Колонки.Добавить("Имя", Новый ОписаниеТипов("Строка"));
	
	Для каждого ОбъектМетаданных Из ЗагружаемыеТипы Цикл
		
		Строка = Сортировка.Добавить();
		Строка.ОбъектМетаданных = ОбъектМетаданных;
		Строка.Имя = ОбъектМетаданных.Имя;
		
		Если ОбщегоНазначенияБТС.ЭтоКонстанта(ОбъектМетаданных) Тогда
			
			Строка.Приоритет = 0;
			
		ИначеЕсли ОбщегоНазначенияБТС.ЭтоСсылочныеДанные(ОбъектМетаданных) Тогда
			
			Если ОбщегоНазначенияБТС.ЭтоПланВидовХарактеристик(ОбъектМетаданных) Тогда
				
				Строка.Приоритет = 1;
				
			ИначеЕсли ОбщегоНазначенияБТС.ЭтоПланСчетов(ОбъектМетаданных) Тогда
				
				Строка.Приоритет = 2;
				
			ИначеЕсли ОбщегоНазначенияБТС.ЭтоПланВидовРасчета(ОбъектМетаданных) Тогда
				
				Строка.Приоритет = 3;
				
			ИначеЕсли ОбщегоНазначенияБТС.ЭтоСправочник(ОбъектМетаданных) Тогда
				
				Строка.Приоритет = 4;
				
			Иначе
				
				Строка.Приоритет = 5;
				
			КонецЕсли;
				
		ИначеЕсли ОбщегоНазначенияБТС.ЭтоНаборЗаписей(ОбъектМетаданных) Тогда
			
			Строка.Приоритет = 6;
			
		ИначеЕсли Метаданные.РегистрыРасчета.Содержит(ОбъектМетаданных.Родитель()) Тогда // Перерасчеты
			
			Строка.Приоритет = 7;
			
		ИначеЕсли Метаданные.Последовательности.Содержит(ОбъектМетаданных) Тогда
			
			Строка.Приоритет = 8;
			
		Иначе
			
			ШаблонТекста = НСтр("ru = 'Выгрузка объекта метаданных не поддерживается %1'");
			ТекстСообщения = СтрШаблон(ШаблонТекста, ОбъектМетаданных.ПолноеИмя());
			ВызватьИсключение(ТекстСообщения);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Сортировка.Сортировать("Приоритет, Имя");
	
	Возврат Сортировка.ВыгрузитьКолонку("ОбъектМетаданных");
	
КонецФункции

Процедура ВыполнитьЗаменуСсылок()
	
	МенеджерПересозданияСсылок = Обработки.ВыгрузкаЗагрузкаДанныхМенеджерПересозданияСсылок.Создать();
	МенеджерПересозданияСсылок.Инициализировать(ТекущийКонтейнер, ТекущийПотокЗаменыСсылок);
	МенеджерПересозданияСсылок.ВыполнитьПересозданиеСсылок();
	
	МенеджерСопоставленияСсылок = Обработки.ВыгрузкаЗагрузкаДанныхМенеджерСопоставленияСсылок.Создать();
	МенеджерСопоставленияСсылок.Инициализировать(ТекущийКонтейнер, ТекущийПотокЗаменыСсылок, ТекущиеОбработчики);
	МенеджерСопоставленияСсылок.ВыполнитьСопоставлениеСсылок();
	
КонецПроцедуры

Процедура ВыполнитьЗагрузкуДанных()
		
	Для ИндексЗагружаемого = ИндексПервогоЗагружаемого По ТекущиеЗагружаемыеТипы.ВГраница() Цикл
	
		ОбъектМетаданных = ТекущиеЗагружаемыеТипы[ИндексЗагружаемого];
		
		Если ТекущиеИсключаемыеТипы.Найти(ОбъектМетаданных) = Неопределено Тогда
			
			ВыгрузкаЗагрузкаДанныхСлужебный.ЗафиксироватьНачалоЗагрузкиОбъектаМетаданных(ОбъектМетаданных);	
			
			Отказ = Ложь;
			ТекущиеОбработчики.ПередЗагрузкойТипа(ТекущийКонтейнер, ОбъектМетаданных, Отказ);
			
			Если Не Отказ Тогда	
				ЗагрузитьДанныеОбъектаИнформационнойБазы(ОбъектМетаданных);		
			КонецЕсли;
			
			ТекущиеОбработчики.ПослеЗагрузкиТипа(ТекущийКонтейнер, ОбъектМетаданных);
						
		Иначе
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Выгрузка загрузка данных. Загрузка объекта пропущена'", ОбщегоНазначения.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Информация,
				ОбъектМетаданных,
				,
				СтрШаблон(НСтр("ru = 'Загрузка данных объекта метаданных %1 пропущена, т.к. он включен в
                          |список объектов метаданных, исключаемых из выгрузки и загрузки данных'", ОбщегоНазначения.КодОсновногоЯзыка()),
					ОбъектМетаданных.ПолноеИмя()));
			
		КонецЕсли;
		
	КонецЦикла;
	
	ВыгрузкаЗагрузкаДанныхСлужебный.ЗафиксироватьЗавершениеЗагрузкиОбъектовМетаданных();	
	
КонецПроцедуры

// Загружает все необходимые данные для объекта информационной базы.
//
// Параметры:
//	ОбъектМетаданных - ОбъектМетаданных - загружаемый объект метаданных.
//
Процедура ЗагрузитьДанныеОбъектаИнформационнойБазы(Знач ОбъектМетаданных)
	
	ЗаписьЖурналаРегистрации(
		НСтр("ru = 'Выгрузка загрузка данных. Загрузка объекта метаданных'", ОбщегоНазначения.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Информация,
		ОбъектМетаданных,
		,
		СтрШаблон(НСтр("ru = 'Начало загрузки данных объекта метаданных: %1'", ОбщегоНазначения.КодОсновногоЯзыка()),
			ОбъектМетаданных.ПолноеИмя()));
	
	КоличествоОбъектов = 0;
	ОтложенныеНаборы = Новый Соответствие;
	
	Для Каждого ОписаниеФайла Из ТекущийКонтейнер.ПолучитьОписанияФайловИзКаталога(ВыгрузкаЗагрузкаДанныхСлужебный.InfobaseData(), ОбъектМетаданных.ПолноеИмя()) Цикл
		
		ТекущийКонтейнер.РаспаковатьФайл(ОписаниеФайла);
		
		ТекущийПотокЗаменыСсылок.ВыполнитьЗаменуСсылокВФайле(ОписаниеФайла);
		
		ПотокЧтения = Обработки.ВыгрузкаЗагрузкаДанныхПотокЧтенияДанныхИнформационнойБазы.Создать();
		ПотокЧтения.ОткрытьФайл(ОписаниеФайла.ПолноеИмя);
		
		Пока ПотокЧтения.ПрочитатьОбъектДанныхИнформационнойБазы() Цикл
			
			Объект = ПотокЧтения.ТекущийОбъект();
			Артефакты = ПотокЧтения.АртефактыТекущегоОбъекта();
			
			ЗаписатьОбъектВИнформационнуюБазу(Объект, Артефакты, ОтложенныеНаборы, ОбъектМетаданных);
			
			КоличествоОбъектов = КоличествоОбъектов + 1;
			
		КонецЦикла;
		
		ПотокЧтения.Закрыть();
		УдалитьФайлы(ОписаниеФайла.ПолноеИмя);
		
	КонецЦикла;
	
	Для Каждого КлючИЗначение Из ОтложенныеНаборы Цикл
		
		Объект = КлючИЗначение.Значение.Объект;
		АртефактыОбъекта = КлючИЗначение.Значение.АртефактыОбъекта;
		КоличествоОбъектов = КоличествоОбъектов + 1;
		
		Попытка
			Объект.Записать();
		Исключение
		
			Комментарий = СтрШаблон(
				НСтр("ru = 'Объекта метаданных %1 с представлением ""%2"" не загружен по причине: %3'", ОбщегоНазначения.КодОсновногоЯзыка()),
				ОбъектМетаданных.ПолноеИмя(),
				Строка(Объект),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Выгрузка загрузка данных. Загрузка объекта метаданных.Ошибка'", ОбщегоНазначения.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				ОбъектМетаданных,
				,
				Комментарий);
			
			ВызватьИсключение Комментарий;
				
		КонецПопытки;
			
		ТекущиеОбработчики.ПослеЗагрузкиОбъекта(ТекущийКонтейнер, Объект, АртефактыОбъекта);
		
	КонецЦикла;
	
	Комментарий = СтрШаблон(
		НСтр("ru = 'Окончание загрузки данных объекта метаданных: %1
					|Загружено объектов: %2'", ОбщегоНазначения.КодОсновногоЯзыка()),
		ОбъектМетаданных.ПолноеИмя(), 
		КоличествоОбъектов);
	ЗаписьЖурналаРегистрации(
		НСтр("ru = 'Выгрузка загрузка данных. Загрузка объекта метаданных'", ОбщегоНазначения.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Информация,
		ОбъектМетаданных,
		,
		Комментарий);
	
КонецПроцедуры

// Записывает объект в информационную базу.
//
// Параметры:
//	Объект - Произвольный - загружаемый объект метаданных.
//	АртефактыОбъекта - Массив из ОбъектXDTO - массив объектов XDTO.
//	ОтложенныеНаборы - Соответствие - коллекция наборов записей, которые не удалось записать
//
Процедура ЗаписатьОбъектВИнформационнуюБазу(Объект, АртефактыОбъекта, ОтложенныеНаборы, ОбъектМетаданных)
	
	Отказ = Ложь;
	ТекущиеОбработчики.ПередЗагрузкойОбъекта(ТекущийКонтейнер, Объект, АртефактыОбъекта, Отказ);
	ЭтоУдалениеОбъекта = ТипЗнч(Объект) = Тип("УдалениеОбъекта");
	
	ПолноеИмяОбъектаМетаданных = ОбъектМетаданных.ПолноеИмя();
	
	Если Не Отказ Тогда
		
		Если ОбщегоНазначенияБТС.ЭтоКонстанта(ОбъектМетаданных) Тогда
			
			Если Не ЗначениеЗаполнено(Объект.Значение) Тогда
				// Поскольку константы предварительно очищались - повторная перезапись пустых
				// значений не требуется.
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		
		Объект.ОбменДанными.Загрузка = Истина;
		
		Если Не ЭтоУдалениеОбъекта Тогда
			Объект.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов");
		КонецЕсли;
		
		Если ОбщегоНазначенияБТС.ЭтоНезависимыйНаборЗаписей(ОбъектМетаданных) Тогда
			
			Попытка
				
				Объект.Записать();
				
			Исключение
				
				Комментарий = СтрШаблон(
					НСтр("ru = 'Объекта метаданных %1 с представлением ""%2"" не загружен по причине: %3'", ОбщегоНазначения.КодОсновногоЯзыка()),
					ПолноеИмяОбъектаМетаданных,
					Строка(Объект),
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
				ЗаписьЖурналаРегистрации(
					НСтр("ru = 'Выгрузка загрузка данных. Загрузка объекта метаданных.Ошибка'", ОбщегоНазначения.КодОсновногоЯзыка()),
					УровеньЖурналаРегистрации.Ошибка,
					ОбъектМетаданных,
					,
					Комментарий);
						
				ВызватьИсключение Комментарий;
				
			КонецПопытки;
			
		Иначе

			ДублиПредопределенных = Неопределено;
			
			Если ОбщегоНазначенияБТС.ЭтоСсылочныеДанныеПоддерживающиеПредопределенныеЭлементы(ОбъектМетаданных)
				И Не ЭтоУдалениеОбъекта
				И Объект.Предопределенный Тогда
				
				ИмяПредопределенного = Объект.ИмяПредопределенныхДанных;
				
				ПолноеИмяПредопределенного = СтрШаблон(
					"%1.%2",
					ПолноеИмяОбъектаМетаданных,
					ИмяПредопределенного);
					
				Если ОбработанныеДублиПредопределенных.Получить(ПолноеИмяПредопределенного) = Неопределено Тогда
					
					ОбработанныеДублиПредопределенных.Вставить(
						ПолноеИмяПредопределенного,
						Истина);
						
					Запрос = Новый Запрос;
					Запрос.Текст = СтрЗаменить("ВЫБРАТЬ
						|	Т.Ссылка КАК Ссылка
						|ИЗ
						|	&Таблица КАК Т
						|ГДЕ 
						|	Т.ИмяПредопределенныхДанных = &ИмяПредопределенного
						|	И Т.Ссылка <> &Ссылка",
						"&Таблица",
					 	ПолноеИмяОбъектаМетаданных);
					Запрос.УстановитьПараметр("ИмяПредопределенного", ИмяПредопределенного);
					Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
					
					ДублиПредопределенных = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
					
				КонецЕсли;
			КонецЕсли;
			
			Попытка
				
				Если ЗначениеЗаполнено(ДублиПредопределенных) Тогда
				
					НачатьТранзакцию();
					
					Попытка
						
						Для Каждого ДубльПредопределенных Из ДублиПредопределенных Цикл
							ДубльПредопределенныхОбъект = ДубльПредопределенных.ПолучитьОбъект(); // СправочникОбъект
							ДубльПредопределенныхОбъект.ОбменДанными.Загрузка = Истина;
							ДубльПредопределенныхОбъект.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов");
							ДубльПредопределенныхОбъект.Удалить();
						КонецЦикла;
						
						Объект.Записать();
						
						ЗафиксироватьТранзакцию();
							
					Исключение
						ОтменитьТранзакцию();
						ВызватьИсключение;
					КонецПопытки;
					
				ИначеЕсли ОбщегоНазначенияБТС.ЭтоРегистрСведений(ОбъектМетаданных)
					И ОбъектМетаданных.РежимЗаписи = Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.ПодчинениеРегистратору 
					И ОбъектМетаданных.ПериодичностьРегистраСведений <> Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.ПозицияРегистратора Тогда
					
					Регистратор = Объект.Отбор.Регистратор.Значение;
					Попытка
						Объект.Записать();
						ОтложенныеНаборы.Удалить(Регистратор);
					Исключение
						ОтложенныеНаборы.Вставить(Регистратор, Новый Структура("Объект, АртефактыОбъекта", Объект, АртефактыОбъекта));
						Возврат;
					КонецПопытки;
				
				Иначе 
					Объект.Записать();
				КонецЕсли;
			Исключение
				
				Комментарий = СтрШаблон(
					НСтр("ru = 'Объекта метаданных %1 с представлением ""%2"" не загружен по причине: %3'", ОбщегоНазначения.КодОсновногоЯзыка()),
					ПолноеИмяОбъектаМетаданных,
					Строка(Объект),
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
				ЗаписьЖурналаРегистрации(
					НСтр("ru = 'Выгрузка загрузка данных. Загрузка объекта метаданных.Ошибка'", ОбщегоНазначения.КодОсновногоЯзыка()),
					УровеньЖурналаРегистрации.Ошибка,
					ОбъектМетаданных,
					,
					Комментарий);
			
				ВызватьИсключение Комментарий;
				
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ТекущиеОбработчики.ПослеЗагрузкиОбъекта(ТекущийКонтейнер, Объект, АртефактыОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
